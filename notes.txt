c-lcs-bv notes

popcount (count bits)
https://www.strchr.com/crc32_popcnt
http://danluu.com/assembly-intrinsics/
https://stackoverflow.com/questions/38113284/whats-the-difference-between-builtin-popcountll-and-mm-popcnt-u64
_mm_popcnt_u64 is part of <nmmintrin.h>, a header devised by Intel for utility functions for accessing SSE 4.2 instructions.
popcntintrin.h

cc -std=c99 -pedantic -Wall -O3 -c -o lcstest.o lcstest.c 

$ ./lcstest
llcs        - ascii, calloc, sequential addressing
llcs_a      - ascii, stack,  sequential addressing
llcs_utf8   - utf8, calloc, sequential addressing
llcs_utf8_a - utf8, stack, sequential addressing
[llcs]        Elapsed: 0.635269 seconds Rate: 4722408.932279 (1/sec)
[llcs_a]     Elapsed: 0.285003 seconds Rate: 10526204.987316 (1/sec)
[llcs_utf8]   Elapsed: 1.347623 seconds Rate: 2226141.880927 (1/sec)
[llcs_utf8_a] Elapsed: 0.938346 seconds Rate: 3197114.923493 (1/sec)
lcs_utf8_a: 7
0	1	3	4	6	8	9	
0	1	3	4	6	9	10	
[lcs_utf8_a] Elapsed: 1.055109 seconds Rate: 2843308.132146 (1/sec)

########
Running clang -O3 -mpopcnt -funroll-loops produces a binary that we can examine. 

On macs, we can use otool -tv to get the disassembly. On linux, there's objdump -d.

########
cc -std=c11 -mpopcnt -pedantic -Wall -O3 -o lcstest lcstest.o

$ ./lcstest
llcs        - ascii, calloc, sequential addressing
llcs_a      - ascii, stack,  sequential addressing
llcs_utf8   - utf8, calloc, sequential addressing
llcs_utf8_a - utf8, stack, sequential addressing
[llcs]        Elapsed: 0.624085 seconds Rate: 4807037.502904 (1/sec)
[llcs_a]      Elapsed: 0.275432 seconds Rate: 10891980.597752 (1/sec)
[llcs_utf8]   Elapsed: 1.343073 seconds Rate: 2233683.500450 (1/sec)
[llcs_utf8_a] Elapsed: 0.950979 seconds Rate: 3154643.793396 (1/sec)
lcs_utf8_a: 7
0	1	3	4	6	8	9	
0	1	3	4	6	9	10	
[lcs_utf8_a] Elapsed: 1.139648 seconds Rate: 2632391.756051 (1/sec)

#########
2019-09-15 (old)

cc -std=c11 -mpopcnt -pedantic -Wall -O3 -o lcstest lcstest.o
helmut@Helmuts-MacBook-Pro:~/github/c/c-lcs-bv$ ./lcstest
llcs        - ascii, calloc, sequential addressing
llcs_a      - ascii, stack,  sequential addressing
llcs_utf8   - utf8, calloc, sequential addressing
llcs_utf8_a - utf8, stack, sequential addressing
llcs_utf8_i - utf8, stack, sequential addressing, store key
[llcs]        Elapsed: 0.623470 seconds Rate: 4811779.235569 (1/sec)
[llcs_a]      Elapsed: 0.269870 seconds Rate: 11116463.482417 (1/sec)
[llcs_utf8]   Elapsed: 1.358969 seconds Rate: 2207555.875079 (1/sec)
llcs_utf8_a: 7
[llcs_utf8_a] Elapsed: 0.916799 seconds Rate: 3272254.878114 (1/sec)
llcs_utf8_i: 7
[llcs_utf8_i] Elapsed: 0.316867 seconds Rate: 9467694.647912 (1/sec)
lcs_utf8_a: 7
0	1	3	4	6	8	9	
0	1	3	4	6	9	10	
[lcs_utf8_a] Elapsed: 1.006791 seconds Rate: 2979764.419825 (1/sec)

###########

store key as uint32_t

helmut@Helmuts-MacBook-Pro:~/github/c/c-lcs-bv$ ./lcstest
llcs_asci_a - ascii, stack,  sequential addressing
llcs_asci_i - ascii, stack,  sequential addressing, store key
llcs_utf8_a - utf8, stack, sequential addressing
llcs_utf8_i - utf8, stack, sequential addressing, store key
[llcs_a]      Elapsed: 0.267563 seconds Rate: 11212312.614225 (1/sec)
[llcs_i]      Elapsed: 0.240956 seconds Rate: 12450405.883232 (1/sec)
llcs_utf8_a: 7
[llcs_utf8_a] Elapsed: 0.933243 seconds Rate: 3214596.841337 (1/sec)
llcs_utf8_i: 7
[llcs_utf8_i] Elapsed: 0.303038 seconds Rate: 9899748.546387 (1/sec)
lcs_utf8_a: 7
0	1	3	4	6	8	9	
0	1	3	4	6	9	10	
[lcs_utf8_a] Elapsed: 1.031241 seconds Rate: 2909116.297742 (1/sec)

###########

cleanup, without popcount

helmut@Helmuts-MacBook-Pro:~/github/c/c-lcs-bv$ make rebuild
rm -rf *.o lcstest
cc -Wall -O3 -c -o lcstest.o lcstest.c 
cc -Wall -O3 -o lcstest lcstest.o
helmut@Helmuts-MacBook-Pro:~/github/c/c-lcs-bv$ ./lcstest
llcs_asci_a - ascii, stack, sequential addressing
llcs_asci_i - ascii, stack, sequential addressing, store key
llcs_utf8_a - utf-8, stack, sequential addressing
llcs_utf8_i - utf-8, stack, sequential addressing, store key

[llcs_a]      Elapsed: 0.275416 seconds Rate: 10892613.355796 (1/sec)
[llcs_i]      Elapsed: 0.256856 seconds Rate: 11679696.016445 (1/sec)
[llcs_utf8_a] Elapsed: 0.894783 seconds Rate: 3352768.213075 (1/sec)
[llcs_utf8_i] Elapsed: 0.303757 seconds Rate: 9876315.607542 (1/sec)
lcs_utf8_a: 7
0	1	3	4	6	8	9	
0	1	3	4	6	9	10	
[lcs_utf8_a] Elapsed: 1.034902 seconds Rate: 2898825.202773 (1/sec)

############

further cleanup

helmut@Helmuts-MacBook-Pro:~/github/c/c-lcs-bv$ ./lcstest
llcs_asci_a - ascii, stack, sequential addressing
llcs_asci_i - ascii, stack, sequential addressing, store key
llcs_utf8_a - utf-8, stack, sequential addressing
llcs_utf8_i - utf-8, stack, sequential addressing, store key

[llcs_a]      Elapsed: 0.274226 seconds Rate: 10939881.703413 (1/sec)
llcs_a: 7
[llcs_i]      Elapsed: 0.255108 seconds Rate: 11759725.292817 (1/sec)
llcs_utf8_a: 7
[llcs_utf8_a] Elapsed: 0.904264 seconds Rate: 3317615.209718 (1/sec)
[llcs_utf8_i] Elapsed: 0.317548 seconds Rate: 9447390.630708 (1/sec)
lcs_utf8_a: 7
0	1	3	4	6	8	9	
0	1	3	4	6	9	10	
[lcs_utf8_a] Elapsed: 1.015980 seconds Rate: 2952814.031772 (1/sec)

################
$ make rebuild
rm -rf *.o lcstest
cc -std=c11 -mpopcnt -pedantic -Wall -Ofast -c -o lcstest.o lcstest.c 
cc -std=c11 -mpopcnt -pedantic -Wall -Ofast -o lcstest lcstest.o

$ ./lcstest
llcs_asci_a - ascii, stack, sequential addressing
llcs_asci_i - ascii, stack, sequential addressing, store key
llcs_utf8_a - utf-8, stack, sequential addressing
llcs_utf8_i - utf-8, stack, sequential addressing, store key

[llcs_a]      Elapsed: 0.296190 seconds Rate: 10128633.647321 (1/sec)
llcs_a: 7
[llcs_i]      Elapsed: 0.245821 seconds Rate: 12204002.099088 (1/sec)
llcs_utf8_a: 7
[llcs_utf8_a] Elapsed: 0.934339 seconds Rate: 3210826.049218 (1/sec)
[llcs_utf8_i] Elapsed: 0.296865 seconds Rate: 10105603.557172 (1/sec)
lcs_utf8_a: 7
0	1	3	4	6	8	9	
0	1	3	4	6	9	10	
[lcs_utf8_a] Elapsed: 1.008869 seconds Rate: 2973626.902997 (1/sec)

###############
2019-10-14

llcs_asci_t - ascii, table

helmut@Helmuts-MacBook-Pro:~/github/c/c-lcs-bv$ time ./lcstest
Storage size for char : 1 
llcs_asci_i - ascii, stack, sequential addressing, store key
llcs_asci_t - ascii, table
llcs_utf8_i - utf-8, stack, sequential addressing, store key

llcs_asci_i: 7
[llcs_asci_i]      Elapsed: 1.165119 seconds Rate: 12.9 (M/sec)
llcs_asci_t: 7 l1: 10 l2: 11
llcs_asci_t: 7 l1: 10 l2: 11
[llcs_asci_t] Elapsed: 0.598749 seconds Rate: 33.4 (M/sec)
[llcs_utf8_i] Elapsed: 0.989621 seconds Rate: 10.1 (M/sec)
lcs_utf8_a: 7
0	1	3	4	6	8	9	
0	1	3	4	6	9	10	
[lcs_utf8_a] Elapsed: 1.177155 seconds Rate: 2.5 (M/sec)
Total: 3.930644 seconds

real	0m3.935s
user	0m3.931s
sys	0m0.003s



